---
title: "Data Import"
author: "James Normington"
logo: "images/mac.png"
format: 
  revealjs:
    theme: slides.scss
    multiplex: true
    transition: fade
    chalkboard: true
    auto-stretch: false
editor: visual
---

```{r setup}
library(tidyverse)
library(ggplot2)
library(lubridate)
library(ggmap)
library(GGally)
```

## Learning Goals {.unnumbered}

-   Develop comfort in finding an existing data set to import into R
-   Develop comfort in importing data of a variety of file types into R
-   Understand and implement the data cleaning process to make values consistent
-   Understand the implications of different ways of dealing with missing values with `replace_na` and `drop_na`

## Key Ideas {.unnumbered}

-   Finding Existing Data Sets
-   Loading Data Sets
-   Checking Imported Data
-   Cleaning Data

More thorough notes available at [https://jamesnormington.github.io/112_spring_2023/data-import.html](https://bcheggeseth.github.io/112_fall_2022/data-import.html){.uri}

## Finding Existing Data Sets

-   Google: "movie reviews filetype:csv"
-   [awesome-public-datasets](https://github.com/caesar0301/awesome-public-datasets) GitHub repo
-   [Kaggle data](https://www.kaggle.com/datasets)
-   [data.world website](https://data.world/)
-   [Prof Heggeseth's website](https://bcheggeseth.github.io/datasets/)

## Loading Data Sets

Depending on the file type (csv, tsv, excel, Google sheet, stata file, shapefile, etc.), you'll need to adjust the function you use. Here are some of the most common:

-   `read_csv()`
-   `read_delim()`
-   `read_sheet()`
-   `st_read()`

## Loading Data Sets

The Import Wizard can help you write the code!

Try importing data from:

    https://jamesnormington.github.io/112_spring_2023/data/imdb_5000_messy.csv

*Note: When using the Import Wizard, make sure to copy and paste the code into a Rmd file.*

## Checking Imported Data

-   Always look at the data after importing with `View()`

-   Do a quick summary of all variables:

<!-- -->

    dataset_name %>% 
      mutate(across(where(is.character), as.factor)) %>% 
      summary()

## Cleaning Data {.smaller .scrollable}

**Cleaning Categorical Variables**

"Clean" data has consistent values in terms of spelling and capitalization.

How could we clean this up?

```{r echo=TRUE}
imdbMessy <- read_csv("https://jamesnormington.github.io/112_spring_2023/data/imdb_5000_messy.csv")
imdbMessy %>% count(color)
```

. . .

```{r echo=TRUE}
imdbMessy <- imdbMessy %>% 
  mutate(color = factor(color)) %>%  #convert to a factor
  mutate(color = fct_recode(color, "B&W" = "Black and White", "Color" = "color", "Color" = "COLOR")) #recode levels

imdbMessy %>% count(color)
```

## Cleaning Data {.smaller .scrollable}

Study the individual observations with NAs carefully.

-   Why do you think they are missing?
-   Are certain types of observations more likely to have NAs?

. . .

**Addressing Missing Data**

You have several options for dealing with NAs (and they have different consequences):

::: incremental
-   You can remove observations with one or more NAs (see `drop_na`).
-   You can remove columns with many NA values with `select`.
-   You can replace NAs with a reasonable value (called imputing values). This could be a default value (like zero), or the average for a column. (see `replace_na`)
:::

## Cleaning Data {.smaller .scrollable}

Let's check to see how many values are missing per variable.

```{r echo=TRUE}
colSums(is.na(imdbMessy)) # Number of values that are missing per variable
```

. . .

Consider the actor_1\_facebook_likes column. Take a look at a few of the records that have NA values. Why do you think there are NAs?

```{r echo=TRUE}
imdbMessy %>% filter(is.na(actor_1_facebook_likes)) %>% select(movie_title,actor_1_name,actor_1_facebook_likes) %>% head()
```

. . .

To remove observations (rows) that are missing `actor_1_facebook_likes`,

```{r echo=TRUE}
imdbMessysub <- imdbMessy %>% filter(!is.na(actor_1_facebook_likes))  #Notice how I saved this new smaller dataset to a new name
```

To replace missing values of `actor_1_facebook_likes` with 0,

```{r echo=TRUE}
imdbMessysub2 <- imdbMessy %>% mutate(actor_1_facebook_likes = replace_na(actor_1_facebook_likes, 0))  
```

## Assignment Part 1 (due Wed. 3/29 @ 11:59pm)

Find a dataset that is not built into R and is related to one of the following topics:

-   a hobby or passion
-   hometown or place you have lived
-   Something you know nothing about, but want to learn about

Load the data into R, make sure it is clean, and construct one interesting visualization of the data.

**Note: this might help you brainstorm ideas for projects**

## After Class {.unnumbered}

-   Assignment 8 (Part 1 and Part 2) due next Wednesday

-   Midterm Revisions -- start Thursday, due before Tuesday class 3/28

    -   No extensions unless extreme circumstances.

-   IV1 due Friday @ 11:59pm

    -   Incorporate my feedback from IV0
